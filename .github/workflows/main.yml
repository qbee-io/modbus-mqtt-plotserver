# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      qbee_upload_folder: modbus-mqtt-plotserver

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Resolve package details
      - name: Resolve package details
        id: resolve-package-details
        run: |
          # package architecture
          PKG_ARCH="all"

          # package versions
          PLOTSERVER_VERSION="0.0.1"
          MQTT2PLOTSERVER_VERSION="0.0.1"
          MODBUS4MQTT_VERSION="0.0.1"

          echo "::set-output name=PKG_ARCH::$PKG_ARCH"
          echo "::set-output name=PLOTSERVER_PKG_FILENAME::plotserver_${PLOTSERVER_VERSION}_${PKG_ARCH}.deb"
          echo "::set-output name=PLOTSERVER_VERSION::${PLOTSERVER_VERSION}"
          echo "::set-output name=MQTT2PLOTSERVER_PKG_FILENAME::mqtt2plotserver_${MQTT2PLOTSERVER_VERSION}_${PKG_ARCH}.deb"
          echo "::set-output name=MQTT2PLOTSERVER_VERSION::${MQTT2PLOTSERVER_VERSION}"
          echo "::set-output name=MODBUS4MQTT_PKG_FILENAME::modbus4mqtt_${MODBUS4MQTT_VERSION}_${PKG_ARCH}.deb"
          echo "::set-output name=MODBUS4MQTT_VERSION::${MODBUS4MQTT_VERSION}"

      # create plotserver deb package
      - name: package plotserver
        uses: bpicode/github-action-fpm@v0.9.2
        with:
          fpm_args: "--version ${{ steps.resolve-package-details.outputs.PLOTSERVER_VERSION }} --architecture ${{ steps.resolve-package-details.outputs.PKG_ARCH }}"
          fpm_opts: "-s dir -t deb -n plotserver -d python3-pip --after-install ./plotserver/after-install.sh -C ./plotserver etc"

      # create mqtt2plotserver deb package
      - name: package mqtt2plotserver
        uses: bpicode/github-action-fpm@v0.9.2
        with:
          fpm_args: "--version ${{ steps.resolve-package-details.outputs.MQTT2PLOTSERVER_VERSION }} --architecture ${{ steps.resolve-package-details.outputs.PKG_ARCH }}"
          fpm_opts: "-s dir -t deb -n mqtt2plotserver -d python3-pip -d mosquitto --after-install ./mqtt2plotserver/after-install.sh -C ./mqtt2plotserver etc usr"

      # create modbus4mqtt deb package
      - name: package modbus4mqtt
        uses: bpicode/github-action-fpm@v0.9.2
        with:
          fpm_args: "--version ${{ steps.resolve-package-details.outputs.MODBUS4MQTT_VERSION }} --architecture ${{ steps.resolve-package-details.outputs.PKG_ARCH }}"
          fpm_opts: "-s dir -t deb -n modbus4mqtt -d python3-pip --after-install ./modbus4mqtt/after-install.sh -C ./modbus4mqtt etc usr"


      ### QBEE AUTH ####
      - name: qbee.io authentication
        id: qbee-auth
        uses: qbee-io/authenticate-action@v1
        with:
          login: ${{ secrets.QBEE_USER }}
          password: ${{ secrets.QBEE_PW }}

      ### PLOTSERVER UPLOAD ####
      - name: qbee.io file upload plotserver deb package
        uses: qbee-io/file-upload-action@v1.2
        with:
          token: ${{ steps.qbee-auth.outputs.token }}
          filename: ${{ steps.resolve-package-details.outputs.PLOTSERVER_PKG_FILENAME }}
          qbee_directory: ${{ env.qbee_upload_folder }}/plotserver
          local_directory: '.'

      - name: qbee.io file upload plotserver config
        uses: qbee-io/file-upload-action@v1.2
        with:
          token: ${{ steps.qbee-auth.outputs.token }}
          filename: param.cfg.template
          qbee_directory: ${{ env.qbee_upload_folder }}/plotserver
          local_directory: 'plotserver/config'

      ### MQTT2PLOTSERVER UPLOAD ####
      - name: qbee.io file upload mqtt2plotserver deb package
        uses: qbee-io/file-upload-action@v1.2
        with:
          token: ${{ steps.qbee-auth.outputs.token }}
          filename: ${{ steps.resolve-package-details.outputs.MQTT2PLOTSERVER_PKG_FILENAME }}
          qbee_directory: ${{ env.qbee_upload_folder }}/mqtt2plotserver
          local_directory: '.'

      - name: qbee.io file upload mqtt2plotserver config
        uses: qbee-io/file-upload-action@v1.2
        with:
          token: ${{ steps.qbee-auth.outputs.token }}
          filename: config.yml.template
          qbee_directory: ${{ env.qbee_upload_folder }}/mqtt2plotserver
          local_directory: 'mqtt2plotserver/config'

      ### MODBUS4MQTT UPLOAD ####
      - name: qbee.io file upload modbus4mqtt deb package
        uses: qbee-io/file-upload-action@v1.2
        with:
          token: ${{ steps.qbee-auth.outputs.token }}
          filename: ${{ steps.resolve-package-details.outputs.MODBUS4MQTT_PKG_FILENAME }}
          qbee_directory: ${{ env.qbee_upload_folder }}/modbus4mqtt
          local_directory: '.'

      - name: qbee.io file upload modbus4mqtt main config
        uses: qbee-io/file-upload-action@v1.2
        with:
          token: ${{ steps.qbee-auth.outputs.token }}
          filename: config.yml.template
          qbee_directory: ${{ env.qbee_upload_folder }}/modbus4mqtt
          local_directory: 'modbus4mqtt/config'

      - name: qbee.io file upload modbus4mqtt modbus config
        uses: qbee-io/file-upload-action@v1.2
        with:
          token: ${{ steps.qbee-auth.outputs.token }}
          filename: temp_sensor.yml
          qbee_directory: ${{ env.qbee_upload_folder }}/modbus4mqtt
          local_directory: 'modbus4mqtt/config'

      ### QBEE CONFIG ####
      - name: qbee.io software management
        uses: qbee-io/software-management-action@v0.4
        with:
         token: ${{ steps.qbee-auth.outputs.token }}
         config_file: 'qbee/software_management.json'
         package_name: ${{ steps.resolve-package-details.outputs.PLOTSERVER_PKG_FILENAME }}
         mode: 'replace'
         device_or_group_id: ${{ secrets.QBEE_DEVICE_ID }}
         commit_message: 'uploading content from GitHub'
